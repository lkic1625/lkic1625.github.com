I"P<h1 id="serverless">serverless</h1>

<p>서버리스라 해서 서버가 없는 것은 아니다.
클라우드 서비스가 대신 관리하여 서버 관리에 드는 부담을 줄이는 것을 의미한다.</p>

<p>AWS에 EC2나 Google Compute Engine과는 다르게 VM 인스턴스를 미리 구매해야 한다.
단순히 코드를 업로드한 뒤, 사용량에 따라 요금을 지불하면 된다.</p>

<p>AWS Lambda와 Cloud Functions는 특정한 동작을 수행한 로직을 저장하고, 요청이 들어올 때 로직을 실행하는 서비스다.
<code class="language-plaintext highlighter-rouge">FaaS(Functtion as a Service)</code>라 불린다. 이미지 리사이징과 같은 노드가 버거운 작업들을 함수로 만들어 클라우드에 올리고,
리사이징이 필요할 때마다 서비스를 호출하면 된다.</p>

<p>S3는 클라우드 데이터 저장소라고 보면 된다. 노드 서버가 정적 파일 제공에 딱히 이점이 있이 않으므로 클라우드 데이터 저장소가 대신 정정파일을 제공하도록 위임한다.</p>

<h1 id="aws-s3-사용하기">AWS S3 사용하기</h1>

<p>S3를 사용하려면 미리 AWS 웹사이트에서 관련 설정을 해두어야 한다.</p>

<h2 id="버킷-권한-설정">버킷 권한 설정</h2>

<p>버킷을 설정 변경 없이 생성 후 아래 JSON 파일을 권한 - 버킷 정책에서 입력하자.
버킷 생성 시 퍼블릭 엑세스를 막아둔다면 권한 변경이 불가하니 이를 주의하도록 하자.</p>

<p>버킷 정책 예제에 대한 자세한 설명은 <a href="https://docs.aws.amazon.com/ko_kr/AmazonS3/latest/dev/example-bucket-policies.html">이 사이트</a>에서 볼 수 있다.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
   </span><span class="nl">"Version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2020-09-24"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"Statement"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
       </span><span class="p">{</span><span class="w">
           </span><span class="nl">"Sid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AddPerm"</span><span class="p">,</span><span class="w">
           </span><span class="nl">"Effect"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Allow"</span><span class="p">,</span><span class="w">
           </span><span class="nl">"Principal"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w">
           </span><span class="nl">"Action"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
               </span><span class="s2">"s3:GetObject"</span><span class="p">,</span><span class="w">
               </span><span class="s2">"s3:PutObject"</span><span class="w">
           </span><span class="p">],</span><span class="w">
           </span><span class="nl">"Resource"</span><span class="p">:</span><span class="w"> </span><span class="s2">"arn:aws:s3:::bookmark/*"</span><span class="w">
       </span><span class="p">}</span><span class="w">
   </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>이후 내 계정 - 보안 자격 증명 메뉴 선택 후 엑세스 키 탭에서 새 엑세스 키 만들기를 선택 후 키 파일을 다운로드하자.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ npm i multer-s3 aws-sdk
</code></pre></div></div>

<p>서비스 사용에 필요한 모듈을 다운로드 후 보안 엑세스 키를 <code class="language-plaintext highlighter-rouge">.env</code>파일에 복사한다.</p>

<p>middlewares.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">...</span>
<span class="kd">const</span> <span class="nx">AWS</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">aws-sdk</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">path</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">multer</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">multer</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">multerS3</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">multer-s3</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">fs</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">fs</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">fs</span><span class="p">.</span><span class="nx">readdir</span><span class="p">(</span><span class="dl">'</span><span class="s1">uploads</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">if</span><span class="p">(</span><span class="nx">error</span><span class="p">){</span>
    <span class="nx">fs</span><span class="p">.</span><span class="nx">mkdirSync</span><span class="p">(</span><span class="dl">'</span><span class="s1">uploads</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span>
<span class="nx">AWS</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span>
  <span class="na">accessKeyId</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">S3_ACCESS_KEY_ID</span><span class="p">,</span>
  <span class="na">secretAccessKey</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">S3_SECRET_ACCESS_KEY</span><span class="p">,</span>
  <span class="na">region</span><span class="p">:</span> <span class="dl">'</span><span class="s1">ap-northeast-2</span><span class="dl">'</span><span class="p">,</span>
<span class="p">});</span>
<span class="nx">exports</span><span class="p">.</span><span class="nx">upload</span> <span class="o">=</span> <span class="nx">multer</span><span class="p">({</span>
  <span class="na">storage</span><span class="p">:</span> <span class="nx">multerS3</span><span class="p">({</span>
    <span class="na">s3</span><span class="p">:</span> <span class="k">new</span> <span class="nx">AWS</span><span class="p">.</span><span class="nx">S3</span><span class="p">(),</span>
    <span class="na">bucket</span><span class="p">:</span> <span class="dl">'</span><span class="s1">bookmark</span><span class="dl">'</span><span class="p">,</span>
    <span class="nx">key</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">file</span><span class="p">,</span> <span class="nx">cb</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">cb</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="s2">`original/</span><span class="p">${</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()}${</span><span class="nx">path</span><span class="p">.</span><span class="nx">basename</span><span class="p">(</span><span class="nx">file</span><span class="p">.</span><span class="nx">originalname</span><span class="p">)}</span><span class="s2">`</span><span class="p">);</span>
    <span class="p">},</span>
  <span class="p">}),</span>
  <span class="na">limits</span><span class="p">:</span> <span class="p">{</span> <span class="na">fileSize</span><span class="p">:</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span> <span class="p">},</span>
<span class="p">});</span>
<span class="p">...</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">region</code>은 <code class="language-plaintext highlighter-rouge">ap-northeast-2</code> 서울을 입력했다.
<code class="language-plaintext highlighter-rouge">req.file.loaction</code>의 <code class="language-plaintext highlighter-rouge">S3</code> 버킷 이미지 주소가 담겨있다.</p>

<p><code class="language-plaintext highlighter-rouge">accessKeyId</code>와 <code class="language-plaintext highlighter-rouge">secretAccessKey</code>가 현재 <code class="language-plaintext highlighter-rouge">deprecated</code> 상태이므로 다른 방식을 취해서 <code class="language-plaintext highlighter-rouge">S3</code>에 접근해야한다.
<code class="language-plaintext highlighter-rouge">credential</code> 파일을 이용하는 방법이 존재하는데, <a href="https://docs.aws.amazon.com/ko_kr/sdk-for-javascript/v2/developer-guide/loading-node-credentials-shared.html">공식문서</a>에서 사용법을 확인해보자.</p>

<h1 id="aws-lambda-사용하기">AWS Lambda 사용하기</h1>
<p><code class="language-plaintext highlighter-rouge">S3</code>에 올린 이미지를 리사이징한 후 줄어든 이미지를 다시 S3에 저장해보겠다.
리사이징은 cpu를 많이 사용하는 작업이라 <code class="language-plaintext highlighter-rouge">Lambda</code>로 분리하여 사용해보았다.</p>

<p><code class="language-plaintext highlighter-rouge">aws-upload</code> 프로젝트 폴더를 생성후 <code class="language-plaintext highlighter-rouge">aws-sdk</code>와 <code class="language-plaintext highlighter-rouge">gm</code>을 설치한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ npm i aws-sdk gm
</code></pre></div></div>

<p>index.js</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">AWS</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">aws-sdk</span><span class="dl">'</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">gm</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">gm</span><span class="dl">'</span><span class="p">).</span><span class="nx">subClass</span><span class="p">({</span> <span class="na">imageMagick</span><span class="p">:</span> <span class="kc">true</span><span class="p">});</span>
<span class="kd">const</span> <span class="nx">s3</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">AWS</span><span class="p">.</span><span class="nx">S3</span><span class="p">();</span>

<span class="nx">exports</span><span class="p">.</span><span class="nx">handler</span> <span class="o">=</span> <span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">context</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">Bucket</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">Records</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">s3</span><span class="p">.</span><span class="nx">bucket</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">Key</span> <span class="o">=</span> <span class="nx">event</span><span class="p">.</span><span class="nx">Records</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">s3</span><span class="p">.</span><span class="nx">object</span><span class="p">.</span><span class="nx">key</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">filename</span> <span class="o">=</span> <span class="nx">Key</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">)[</span><span class="nx">Key</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>
    <span class="kd">const</span> <span class="nx">ext</span> <span class="o">=</span> <span class="nx">Key</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">.</span><span class="dl">'</span><span class="p">)[</span><span class="nx">Key</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1">.</span><span class="dl">'</span><span class="p">).</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span>

    <span class="nx">s3</span><span class="p">.</span><span class="nx">getObject</span><span class="p">({</span> <span class="nx">Bucket</span><span class="p">,</span> <span class="nx">Key</span> <span class="p">},</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">){</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
            <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>    
        <span class="p">}</span>

        <span class="k">return</span> <span class="nx">gm</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">Body</span><span class="p">)</span>
            <span class="p">.</span><span class="nx">resize</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="dl">'</span><span class="s1">^</span><span class="dl">'</span><span class="p">)</span>
            <span class="p">.</span><span class="nx">quality</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
            <span class="p">.</span><span class="nx">toBuffer</span><span class="p">(</span><span class="nx">ext</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">buffer</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nx">console</span><span class="p">.</span><span class="nx">err</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
                    <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">return</span> <span class="nx">s3</span><span class="p">.</span><span class="nx">putObject</span><span class="p">({</span>
                    <span class="nx">Bucket</span><span class="p">,</span>
                    <span class="na">Key</span><span class="p">:</span> <span class="s2">`thumb/</span><span class="p">${</span><span class="nx">filename</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span>
                    <span class="na">Body</span><span class="p">:</span> <span class="nx">buffer</span><span class="p">,</span>
                <span class="p">},</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span><span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
                        <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span>  <span class="s2">`thumb/</span><span class="p">${</span><span class="nx">filename</span><span class="p">}</span><span class="s2">`</span><span class="p">);</span>
                <span class="p">});</span>
            <span class="p">});</span>
    <span class="p">});</span>
<span class="p">};</span>

</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">gm</code> 패키지는 이미지 조작을 위한 패키지이다. <code class="language-plaintext highlighter-rouge">imageMagick</code>방식으로 이미지를 리사이징 하기위해 <code class="language-plaintext highlighter-rouge">subClass</code>로 <code class="language-plaintext highlighter-rouge">imageMagick</code>을 설정하였다.</li>
  <li><code class="language-plaintext highlighter-rouge">handler</code> 함수는 <code class="language-plaintext highlighter-rouge">Lambda</code>호출 시 실행되는 함수이며 매개변수로는 <code class="language-plaintext highlighter-rouge">event</code>와 <code class="language-plaintext highlighter-rouge">context</code>, <code class="language-plaintext highlighter-rouge">callback</code>이 주어진다. <code class="language-plaintext highlighter-rouge">event</code>는 호출 상황에 대한 정보
<code class="language-plaintext highlighter-rouge">context</code>는 실행되는 함수환경에 대한 정보, <code class="language-plaintext highlighter-rouge">callback</code>은 함수가 완료되었는지를 람다에게 알려준다. <code class="language-plaintext highlighter-rouge">callback</code>의 첫 번째 인자는 에러 여부를, 두 번째 인자는 설명을 의미한다.</li>
  <li><code class="language-plaintext highlighter-rouge">event</code> 객체로부터 버킷과 파일경로, 파일명, 확장자 등을 확인한다.</li>
  <li><code class="language-plaintext highlighter-rouge">s3.GetObject</code>를 통해서 버킷에 파일을 불러온다 <code class="language-plaintext highlighter-rouge">data.Body</code>에 파일버퍼가 담겨있다.</li>
  <li><code class="language-plaintext highlighter-rouge">gm</code>함수에 파일 버퍼를 넣고 리사이즈 한다. 자세한 인자 설명은 <a href="https://www.npmjs.com/package/gm">GM 공식문서</a>를 확인하자.</li>
  <li><code class="language-plaintext highlighter-rouge">s3.putObject</code>로 이미지를 저장한다.</li>
</ul>

<p>코드 작성이 완료되었다면 파일을 압축한다.</p>

<h2 id="lambda-서비스-설정">Lambda 서비스 설정</h2>

<p><img src="/assets/images/lambda-create-menu.png" alt="이미지" /></p>

<blockquote>
  <font size="6">Refernce</font>
  <ul>
    <li>조헌영, Node.js 교과서, 길벗, 16장 서버리스 노드 개발</li>
  </ul>
</blockquote>
:ET