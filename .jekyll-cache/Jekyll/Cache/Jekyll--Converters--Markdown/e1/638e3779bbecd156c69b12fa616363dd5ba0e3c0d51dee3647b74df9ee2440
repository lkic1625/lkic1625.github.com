I"q<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML">
</script>

<h1 id="hibernate-with-java-annotation">Hibernate with Java Annotation</h1>

<h3 id="java-annotation-종류">Java Annotation 종류</h3>
<hr />
<ol>
  <li><code class="language-plaintext highlighter-rouge">@Entity</code>
    <ul>
      <li>Database와 Mapping할 것을 알리는 Annotation</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">@Table(name='')</code>
    <ul>
      <li>Database Table에서 사용될 name을 명시한다. class name과 table name이 같다면 명시할 필요 없다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">@Id</code>
    <ul>
      <li>Database Table에서 <code class="language-plaintext highlighter-rouge">primary key</code>를 특정할 때 쓴다.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">@Column(name='')</code>
    <ul>
      <li>실제 Table의 속성 값을 특정할 떄 사용. field name과 column name이 같다면 명시할 필요 없다.</li>
    </ul>
  </li>
</ol>

<h3 id="sessionfactory-session">SessionFactory, Session</h3>
<hr />
<p><img src="/assets/images/JPA_Hibernate.svg" alt="이미지2" /></p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">SessionFactory</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">SessionFactory</code> 인터페이스는 <code class="language-plaintext highlighter-rouge">Session</code> 객체를 얻기 위한 메소드를 제공한다.</li>
      <li>Hibernate config file을 읽어 <code class="language-plaintext highlighter-rouge">Session</code> 객체를 생성한다.</li>
      <li>App 동작 단계에서 한 번만 생성된다(<code class="language-plaintext highlighter-rouge">Heavy-weight object</code>).</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Session</code>
    <ul>
      <li>Database의 JDBC connection의 <code class="language-plaintext highlighter-rouge">Wrapper</code>이다.</li>
      <li><code class="language-plaintext highlighter-rouge">Short-lived object</code>로써 Database의 한 번 접근 후 재사용하지 않는다.</li>
    </ul>
  </li>
</ol>

<h3 id="code">Code</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.b1n.hibernate.demo.entity</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.persistence.Column</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.persistence.Table</span><span class="o">;</span>

<span class="nd">@Entity</span>
<span class="nd">@Table</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"student"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"Student{"</span> <span class="o">+</span>
                <span class="s">"id="</span> <span class="o">+</span> <span class="n">id</span> <span class="o">+</span>
                <span class="s">", firstName='"</span> <span class="o">+</span> <span class="n">firstName</span> <span class="o">+</span> <span class="sc">'\''</span> <span class="o">+</span>
                <span class="s">", lastName='"</span> <span class="o">+</span> <span class="n">lastName</span> <span class="o">+</span> <span class="sc">'\''</span> <span class="o">+</span>
                <span class="s">", email='"</span> <span class="o">+</span> <span class="n">email</span> <span class="o">+</span> <span class="sc">'\''</span> <span class="o">+</span>
                <span class="sc">'}'</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Id</span>
    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"id"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Student</span><span class="o">(</span><span class="nc">String</span> <span class="n">firstName</span><span class="o">,</span> <span class="nc">String</span> <span class="n">lastName</span><span class="o">,</span> <span class="nc">String</span> <span class="n">email</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">firstName</span> <span class="o">=</span> <span class="n">firstName</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">lastName</span> <span class="o">=</span> <span class="n">lastName</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">email</span> <span class="o">=</span> <span class="n">email</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"first_name"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">firstName</span><span class="o">;</span>

    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"last_name"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">lastName</span><span class="o">;</span>

    <span class="nd">@Column</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">"name"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">email</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Student</span><span class="o">(){</span>

    <span class="o">}</span>


<span class="o">}</span>
</code></pre></div></div>

<h3 id="faq-why-we-are-using-jpa-annotation-instead-of-hibernate">FAQ: Why we are using JPA Annotation instead of Hibernate?</h3>
<hr />
<p>ANSWER:
<code class="language-plaintext highlighter-rouge">JPA</code> is a standard specification. <code class="language-plaintext highlighter-rouge">Hibernate</code> is an implementation of the <code class="language-plaintext highlighter-rouge">JPA</code> specification.</p>

<p><code class="language-plaintext highlighter-rouge">Hibernate</code> implements all of the <code class="language-plaintext highlighter-rouge">JPA annotations</code>.</p>

<p>The Hibernate team recommends the use of <code class="language-plaintext highlighter-rouge">JPA annotations</code> as a best practice.</p>

<blockquote>
  <font size="6">Refernce</font>
  <p><br />
https://joosjuliet.github.io/hibernate_structure/
https://docs.jboss.org/hibernate/orm/5.4/userguide/html_single/Hibernate_User_Guide.html</p>
</blockquote>
:ET