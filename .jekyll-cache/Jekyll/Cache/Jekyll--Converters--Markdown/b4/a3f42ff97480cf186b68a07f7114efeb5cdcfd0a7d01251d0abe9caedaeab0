I"c<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML">
</script>

<h1 id="flutter-시작하기">Flutter 시작하기</h1>

<h3 id="설치">설치</h3>
<hr />
<p><img src="/assets/images/flutter-sdk-download.png" alt="이미지2" /></p>

<p><a href="https://flutter.dev/docs/get-started/install/windows">Flutter 홈페이지</a> 접속 후
SDK를 특정 경로에 압축 해제한다. (이 때 <code class="language-plaintext highlighter-rouge">C:\Program Files\</code>과 같은 권한 상승이 필요한 <code class="language-plaintext highlighter-rouge">directory</code>에 저장하지 않는다.)</p>

<h3 id="환경-변수-설정">환경 변수 설정.</h3>
<hr />

<p><img src="/assets/images/system-variable-serach.png" alt="이미지3" /></p>

<p>시스템 환경 변수 설정을 위해</p>

<p><img src="/assets/images/system-variable-01.png" alt="이미지4" />
<img src="/assets/images/system-variable-02.png" alt="이미지5" />
<img src="/assets/images/system-variable-03.png" alt="이미지6" /></p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">SessionFactory</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">SessionFactory</code> 인터페이스는 <code class="language-plaintext highlighter-rouge">Session</code> 객체를 얻기 위한 메소드를 제공한다.</li>
      <li>Hibernate config file을 읽어 <code class="language-plaintext highlighter-rouge">Session</code> 객체를 생성한다.</li>
      <li>App 동작 단계에서 한 번만 생성된다(<code class="language-plaintext highlighter-rouge">Heavy-weight object</code>).</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">Session</code>
    <ul>
      <li>Database의 JDBC connection의 <code class="language-plaintext highlighter-rouge">Wrapper</code>이다.</li>
      <li><code class="language-plaintext highlighter-rouge">Short-lived object</code>로써 Database의 한 번 접근 후 재사용하지 않는다.</li>
    </ul>
  </li>
</ol>

<h3 id="primary-key">Primary Key</h3>
<hr />
<p><code class="language-plaintext highlighter-rouge">primary key</code>란 Table의 행을 특정할 수 있는 key이다.
중복과 null이 불가능한 value라고 생각하면 된다.</p>
<h3 id="code">Code</h3>
<hr />
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.b1n.hibernate.demo</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.b1n.hibernate.demo.entity.Student</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.hibernate.Session</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.hibernate.SessionFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.hibernate.cfg.Configuration</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CreateStudentDemo</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="c1">// create session factory</span>
        <span class="nc">SessionFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Configuration</span><span class="o">()</span>
                <span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="s">"hibernate.cfg.xml"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">addAnnotatedClass</span><span class="o">(</span><span class="nc">Student</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
                <span class="o">.</span><span class="na">buildSessionFactory</span><span class="o">();</span>
        <span class="c1">//create session</span>
        <span class="nc">Session</span> <span class="n">session</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">getCurrentSession</span><span class="o">();</span>

        <span class="k">try</span><span class="o">{</span>
            <span class="c1">// use the session object to save Java object</span>
            <span class="c1">// create a student object</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Creating new Student object.."</span><span class="o">);</span>
            <span class="nc">Student</span> <span class="n">student</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Student</span><span class="o">(</span><span class="s">"Jo"</span><span class="o">,</span> <span class="s">"Wonbin"</span><span class="o">,</span> <span class="s">"lkic1625@gmail.com"</span><span class="o">);</span>
            <span class="c1">// start a transaction</span>
            <span class="n">session</span><span class="o">.</span><span class="na">beginTransaction</span><span class="o">();</span>
            <span class="c1">// save the student object</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Saving the Student.. "</span><span class="o">);</span>
            <span class="n">session</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">student</span><span class="o">);</span>
            <span class="c1">// commit transaction</span>
            <span class="n">session</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">().</span><span class="na">commit</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Done."</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
            <span class="n">factory</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="o">}</span>

    <span class="o">}</span>
<span class="o">}</span>


</code></pre></div></div>

<blockquote>
  <font size="6">Refernce</font>
  <p><br /></p>
</blockquote>
:ET