<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Datablase on Hammer&#39;s Blog</title>
    <link>http://localhost:1313/blog/datablase/</link>
    <description>Recent content in Datablase on Hammer&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© 조원빈 - All rights reserved</copyright>
    <lastBuildDate>Mon, 05 May 2025 00:23:48 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/datablase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Database Internals</title>
      <link>http://localhost:1313/database-internals/</link>
      <pubDate>Mon, 05 May 2025 00:23:48 +0900</pubDate>
      <guid>http://localhost:1313/database-internals/</guid>
      <description>&lt;h1 id=&#34;개요&#34;&gt;개요&lt;/h1&gt;&#xA;&lt;p&gt;해당 개시글은 데이터베이스 인터널스를 읽고 정리한 아티클입니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;2장-b-트리-개요&#34;&gt;2장 B-트리 개요&lt;/h1&gt;&#xA;&lt;h2 id=&#34;디스크-기반-스토리지용-트리&#34;&gt;디스크 기반 스토리지용 트리&lt;/h2&gt;&#xA;&lt;p&gt;이진 트리의 경우 트리의 fanout(한 노드가 가질 수 있는 최대 자식 노드의 개수)가 매우 낮기에 트리의 리밸런싱, 노드 재배치, 포인터 갱신이 자주 발생함.  잦은 포인터 갱신은 높은 유지 비용을 유발하고 디스크 기반 자료 구조로 부적합하다.&lt;/p&gt;&#xA;&lt;p&gt;또한, 노드는 지역성 측면에서 새 노드는 부모 노드와 가까운 위치에 저장되지 않을 수 있음. (이를 paged binary tree 가 일부 해결해줄 수는 있음)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
